<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>其他</title>
      <link href="2023/06/25/other/2023-06-25-free-ui-resource/"/>
      <url>2023/06/25/other/2023-06-25-free-ui-resource/</url>
      
        <content type="html"><![CDATA[<p>免费UI资源的网站<br>以下是一些提供免费UI资源的网站：</p><ol><li><p>Freepik（<a href="https://www.freepik.com）：Freepik">https://www.freepik.com）：Freepik</a> 提供了大量免费的矢量图形、图标、插图、背景和其他UI元素，适用于各种设计项目。</p></li><li><p>Flaticon（<a href="https://www.flaticon.com）：Flaticon">https://www.flaticon.com）：Flaticon</a> 是一个免费图标库，提供了成千上万个免费矢量图标，可用于UI设计和其他项目中。</p></li><li><p>Unsplash（<a href="https://unsplash.com）：Unsplash">https://unsplash.com）：Unsplash</a> 是一个免费的高质量照片库，其中包含了各种类型的照片资源，可用于背景、插图和其他UI设计需要。</p></li><li><p>Pixabay（<a href="https://pixabay.com）：Pixabay">https://pixabay.com）：Pixabay</a> 提供了免费的高质量照片、插图、矢量图形和视频资源，适用于各种设计项目。</p></li><li><p>Pexels（<a href="https://www.pexels.com）：Pexels">https://www.pexels.com）：Pexels</a> 是一个免费照片和视频库，提供了大量高质量的免费资源，适用于UI设计和其他创意项目。</p></li><li><p>UI8（<a href="https://www.ui8.net）：UI8">https://www.ui8.net）：UI8</a> 提供了一些免费的UI设计资源，包括UI模板、图标、插件和其他元素，适用于各种设计需求。</p></li></ol><p>这些网站提供了广泛的免费UI资源，你可以在设计中使用它们来增添元素和美化界面。请记住，某些网站可能有一些资源需要付费使用，所以在使用之前，请确认资源的使用授权和条款。</p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ui </tag>
            
            <tag> free </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot动态添加、移除定时任务</title>
      <link href="2023/06/10/springboot/2023-06-10-springboot-scheduler/"/>
      <url>2023/06/10/springboot/2023-06-10-springboot-scheduler/</url>
      
        <content type="html"><![CDATA[<p>在Spring Boot中，可以使用Spring的任务调度框架来实现动态添加和移除定时任务。Spring的任务调度框架提供了TaskScheduler接口和ScheduledFuture接口，可以用于创建、管理和控制定时任务。</p><p>下面是一个简单的示例，演示如何在运行时动态添加和移除定时任务：</p><p>首先，你需要创建一个定时任务的执行类，实现Runnable接口，并在run()方法中编写具体的任务逻辑。例如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTask</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 编写定时任务逻辑</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行定时任务："</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后，在你的Spring Boot应用程序中，你可以创建一个定时任务管理类，用于动态添加和移除定时任务。可以使用TaskScheduler来创建和管理定时任务。例如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span></span><span class="token class-name">TaskScheduler</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">CronTrigger</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ScheduledFuture</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TaskManager</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ScheduledFuture</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span><span class="token punctuation">></span></span> tasks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">TaskScheduler</span> taskScheduler<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addTask</span><span class="token punctuation">(</span><span class="token class-name">String</span> taskId<span class="token punctuation">,</span> <span class="token class-name">String</span> cronExpression<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Runnable</span> task <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建定时任务的执行类</span>        <span class="token class-name">ScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> future <span class="token operator">=</span> taskScheduler<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CronTrigger</span><span class="token punctuation">(</span>cronExpression<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tasks<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span> future<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"添加定时任务："</span> <span class="token operator">+</span> taskId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeTask</span><span class="token punctuation">(</span><span class="token class-name">String</span> taskId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> future <span class="token operator">=</span> tasks<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>taskId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>future <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            future<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            tasks<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>taskId<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"移除定时任务："</span> <span class="token operator">+</span> taskId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上面的示例中，TaskManager类使用了ConcurrentHashMap来保存定时任务的标识符和ScheduledFuture对象之间的映射关系。</p><p>最后，你可以在其他的Spring组件中注入TaskManager，并在需要的时候调用addTask()方法来动态添加定时任务，调用removeTask()方法来移除定时任务。例如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span> <span class="token class-name">TaskManager</span> taskManager<span class="token punctuation">;</span><span class="token comment">// 添加定时任务</span>taskManager<span class="token punctuation">.</span><span class="token function">addTask</span><span class="token punctuation">(</span><span class="token string">"task1"</span><span class="token punctuation">,</span> <span class="token string">"0/5 * * * * ?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 每5秒执行一次</span><span class="token comment">// 移除定时任务</span>taskManager<span class="token punctuation">.</span><span class="token function">removeTask</span><span class="token punctuation">(</span><span class="token string">"task1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样，你就可以在运行时动态地添加和移除定时任务了。当调用addTask()方法添加定时任务时，任务将会按照指定的时间表进行执行；当调用removeTask()方法移除定时任务时，任务将会被取消执行。</p>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> 定时任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot Webjars</title>
      <link href="2022/06/11/springboot/2022-06-11-springboot-webjars/"/>
      <url>2022/06/11/springboot/2022-06-11-springboot-webjars/</url>
      
        <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>本文介绍springboot项目中引入webjars的方法</p><h2 id="一、创建webjars"><a href="#一、创建webjars" class="headerlink" title="一、创建webjars"></a>一、创建webjars</h2><h3 id="1-创建maven项目"><a href="#1-创建maven项目" class="headerlink" title="1. 创建maven项目"></a>1. 创建maven项目</h3><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>config-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.reporting.outputEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.reporting.outputEncoding</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.versin</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.versin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-jar-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>archive</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>addMavenDescriptor</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>addMavenDescriptor</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>archive</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>$&#123;project.basedir&#125;/src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">></span></span>$&#123;project.build.outputDirectory&#125;/META-INF/resources/webjars<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nexus-aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://maven.aliyun.com/repository/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>releases</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>releases</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-编写网页"><a href="#2-编写网页" class="headerlink" title="2. 编写网页"></a>2. 编写网页</h3><p> 在resources目录下新建static目录，用来存放静态网页与资源。</p><ul><li>最终的项目结构如下：<br><img src="/images/springboot/webjars/webui-struct.png"><h3 id="3-打包"><a href="#3-打包" class="headerlink" title="3. 打包"></a>3. 打包</h3>使用maven命令mvn package，打包，生成jar包。jar包名称及内容如下：<br><img src="/images/springboot/webjars/webui-webjar.png"></li></ul><h2 id="二、使用webjar"><a href="#二、使用webjar" class="headerlink" title="二、使用webjar"></a>二、使用webjar</h2><h3 id="1-引入jar包"><a href="#1-引入jar包" class="headerlink" title="1. 引入jar包"></a>1. 引入jar包</h3><p>将上一步骤的jar包引入到项目中，此处我已经install到了本地，只需要在pom中引入相应的依赖即可。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>config-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-配置资源"><a href="#2-配置资源" class="headerlink" title="2. 配置资源"></a>2. 配置资源</h3><p>用到的StreamUtils.java源码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span><span class="token class-name">ResourceHandlerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">"/system-monitor/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">"classpath:/META-INF/resources/webjars/static/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-测试效果"><a href="#3-测试效果" class="headerlink" title="3. 测试效果"></a>3. 测试效果</h3><p>启动项目，访问<a href="http://localhost:8080/system-monitor/index.html,%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0jar%E5%8C%85%E4%B8%AD%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5%E3%80%82">http://localhost:8080/system-monitor/index.html,即可看到jar包中的静态网页。</a></p>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> webjar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>其他</title>
      <link href="2022/01/27/other/2022-01-27-other/"/>
      <url>2022/01/27/other/2022-01-27-other/</url>
      
        <content type="html"><![CDATA[<p>国内访问GitHub，有时速度很慢，可以通过以下方式尝试解决。</p><h2 id="查询ip地址"><a href="#查询ip地址" class="headerlink" title="查询ip地址"></a>查询ip地址</h2><p>访问 <a href="https://www.ipaddress.com/">https://www.ipaddress.com</a> ，分别查询github.com，github.global.ssl.fastly.net对应的IP地址。</p><h2 id="修改系统hosts文件，将搜索到的ip与对应的域名添加到hosts文件中。"><a href="#修改系统hosts文件，将搜索到的ip与对应的域名添加到hosts文件中。" class="headerlink" title="修改系统hosts文件，将搜索到的ip与对应的域名添加到hosts文件中。"></a>修改系统hosts文件，将搜索到的ip与对应的域名添加到hosts文件中。</h2><p> 我搜到如下：</p><p> 199.232.69.194 github.global.ssl.fastly.net<br> 140.82.114.4 github.com</p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 访问慢 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos新增用户，并设置root权限</title>
      <link href="2021/08/20/linux/2021-08-20-linux-centos-userpwd/"/>
      <url>2021/08/20/linux/2021-08-20-linux-centos-userpwd/</url>
      
        <content type="html"><![CDATA[<h2 id="1-新增用户"><a href="#1-新增用户" class="headerlink" title="1. 新增用户"></a>1. 新增用户</h2><p><code># useradd testUser</code></p><h2 id="2-设置密码"><a href="#2-设置密码" class="headerlink" title="2. 设置密码"></a>2. 设置密码</h2><p><code># passwd testUser</code><br>输入该命令后，会提示让输入密码和确认密码，如果提示’BAD PASSWORD: The password fails the dictionary check - it is too simplistic/systematic’，可不用理会</p><h2 id="3-设置权限，允许所有操作"><a href="#3-设置权限，允许所有操作" class="headerlink" title="3. 设置权限，允许所有操作"></a>3. 设置权限，允许所有操作</h2><p>修改/etc/sudoers 文件，<br>找到<code>root    ALL=(ALL)     ALL</code><br>在下面增加一行<code>testUser       ALL=(ALL)              ALL</code></p><h2 id="4-登录系统"><a href="#4-登录系统" class="headerlink" title="4. 登录系统"></a>4. 登录系统</h2><p>使用testUser用户名密码登录系统，执行命令<code># sudo su</code>，即可切换到root权限模式</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 用户管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot兼容达梦数据库、sqlserver</title>
      <link href="2021/08/20/springboot/2021-08-20-springboot-dameng/"/>
      <url>2021/08/20/springboot/2021-08-20-springboot-dameng/</url>
      
        <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>开发springboot项目过程中，有时需要同时兼容不同的数据库。如果使用jpa、hibernate框架，几乎不需要大的改动，切换驱动、方言等即可实现。<br>如果使用mybatis，由于各家数据库语言上存在差异，可能就需要针对不同数据库，编写不同的脚本。本文主要介绍同时兼容sqlserver和国产数据库<a href="https://eco.dameng.com/">达梦</a>的技术实现，<br>如果能掌握这两种，触类旁通，mysql等其他数据库的兼容亦可以实现。</p><h2 id="安装达梦数据库"><a href="#安装达梦数据库" class="headerlink" title="安装达梦数据库"></a>安装达梦数据库</h2><p>1).下载安装达梦数据库，下载地址<a href="https://eco.dameng.com/download/">https://eco.dameng.com/download/</a><br>达梦数据库设计思想及与方法都与oracle极度相似，故很多sql都可以参考oracle。其详细的安装、操作可参考<a href="https://eco.dameng.com/docs/zh-cn/start/index.html">官方文档</a><br>2).安装完成后，新建模式test，用户选择SYSDBA</p><h2 id="POM修改"><a href="#POM修改" class="headerlink" title="POM修改"></a>POM修改</h2><p>在数据库安装目录下，找到驱动及方言对应的jar包(我的是在<code>D:\dmdbms\drivers\jdbc</code>),在项目src目录下下新建lib文件夹，将jar包复制到该文件夹，添加pom依赖。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.microsoft.sqlserver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mssql-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.dameng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>Dm8JdbcDriver18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>8.1.1.49<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>systemPath</span><span class="token punctuation">></span></span>$&#123;project.basedir&#125;/src/lib/DmJdbcDriver18.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>systemPath</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.dameng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dm-DmDialect<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>systemPath</span><span class="token punctuation">></span></span>$&#123;project.basedir&#125;/src/lib/DmDialect-for-hibernate5.3.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>systemPath</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加profiles，方便打包时选择不同的数据库环境</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>sqlserver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.active</span><span class="token punctuation">></span></span>sqlserver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.active</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>dameng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.active</span><span class="token punctuation">></span></span>dameng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.active</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="springboot配置"><a href="#springboot配置" class="headerlink" title="springboot配置"></a>springboot配置</h2><p>application.yml配置</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring</span><span class="token punctuation">:</span><span class="token attr-name">  profiles</span><span class="token punctuation">:</span><span class="token attr-name">    active</span><span class="token punctuation">:</span> <span class="token attr-value">@project.active@</span><span class="token attr-name">  jpa</span><span class="token punctuation">:</span><span class="token attr-name">    show-sql</span><span class="token punctuation">:</span> <span class="token attr-value">true</span><span class="token attr-name">    hibernate</span><span class="token punctuation">:</span><span class="token attr-name">      ddl-auto</span><span class="token punctuation">:</span> <span class="token attr-value">update</span><span class="token attr-name">mybatis</span><span class="token punctuation">:</span><span class="token attr-name">  configuration</span><span class="token punctuation">:</span><span class="token attr-name">    database-id</span><span class="token punctuation">:</span> <span class="token attr-value">@project.active@</span><span class="token attr-name">    mapper-locations</span><span class="token punctuation">:</span> <span class="token attr-value">classpath:mapperxml/*.xml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>application-dameng.yml配置</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring</span><span class="token punctuation">:</span><span class="token attr-name">  profiles</span><span class="token punctuation">:</span><span class="token attr-name">    active</span><span class="token punctuation">:</span> <span class="token attr-value">dameng</span><span class="token attr-name">  datasource</span><span class="token punctuation">:</span><span class="token attr-name">    driver-class-name</span><span class="token punctuation">:</span> <span class="token attr-value">dm.jdbc.driver.DmDriver</span><span class="token attr-name">    url</span><span class="token punctuation">:</span> <span class="token attr-value">jdbc:dm://192.168.1.152:5237?schema=test</span><span class="token attr-name">    username</span><span class="token punctuation">:</span> <span class="token attr-value">SYSDBA</span><span class="token attr-name">    password</span><span class="token punctuation">:</span> <span class="token attr-value">123456789</span><span class="token attr-name">  jpa</span><span class="token punctuation">:</span><span class="token attr-name">    hibernate</span><span class="token punctuation">:</span><span class="token attr-name">      ddl-auto</span><span class="token punctuation">:</span> <span class="token attr-value">update</span><span class="token attr-name">    database-platform</span><span class="token punctuation">:</span> <span class="token attr-value">org.hibernate.dialect.DmDialect</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>applicatin-sqlserver.yml配置</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring</span><span class="token punctuation">:</span><span class="token attr-name">  jpa</span><span class="token punctuation">:</span><span class="token attr-name">    database-platform</span><span class="token punctuation">:</span> <span class="token attr-value">org.hibernate.dialect.SQLServer2008Dialect</span><span class="token attr-name">  datasource</span><span class="token punctuation">:</span><span class="token attr-name">      driver-class-name</span><span class="token punctuation">:</span> <span class="token attr-value">com.microsoft.sqlserver.jdbc.SQLServerDriver</span><span class="token attr-name">      url</span><span class="token punctuation">:</span> <span class="token attr-value">jdbc:sqlserver://192.168.1.82;databasename=test</span><span class="token attr-name">      username</span><span class="token punctuation">:</span> <span class="token attr-value">sa</span><span class="token attr-name">      password</span><span class="token punctuation">:</span> <span class="token attr-value">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此即可正常使用jpa来操作不同的数据库。</p><h2 id="mybatis的mapper文件配置"><a href="#mybatis的mapper文件配置" class="headerlink" title="mybatis的mapper文件配置"></a>mybatis的mapper文件配置</h2><p>如果在不同的数据库环境下，某些sql语句需要分别处理。我们只需要在mapper里面定义两个相同的方法，为方法添加不同的databaseId即可。<br>例子如下：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>initTable<span class="token punctuation">"</span></span> <span class="token attr-name">databaseId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sqlserver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>if not exists (select * from sysobjects where id = object_id('testTable')and OBJECTPROPERTY(id, 'IsUserTable') = 1)CREATE TABLE testTable ([id] [int] IDENTITY(1,1) NOT NULL,data_id varchar(255)  NULL,permission int NULL,user_id int NULL,CONSTRAINT PK_testTable PRIMARY KEY (id))IF NOT EXISTS (SELECT name from sys.indexes           WHERE name = N'UK_testTable')CREATE UNIQUE NONCLUSTERED INDEX UK_testTable ON testTable (user_id, data_id, permission)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>initTable<span class="token punctuation">"</span></span> <span class="token attr-name">databaseId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dameng<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>declare  V_c INT;begin  select  count(*) into V_C  from sysobjects where name = 'testTable';if V_c == 0 then execute immediate ' CREATE TABLE  "testTable"("id" INT IDENTITY(1, 1) NOT NULL,"data_id" VARCHAR(255),permission int NULL,user_id int NULL,CLUSTER PRIMARY KEY("id")) STORAGE(ON "MAIN", CLUSTERBTR)' ; execute immediate'CREATE UNIQUE  INDEX "UK_testTable" ON "testTable"(user_id ASC, data_id ASC, permission ASC) STORAGE(ON "MAIN", CLUSTERBTR)' ;end if;end;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> 国产数据库 </tag>
            
            <tag> 达梦数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos防火墙关闭</title>
      <link href="2021/04/28/linux/2021-04-28-linux-centos-firewall/"/>
      <url>2021/04/28/linux/2021-04-28-linux-centos-firewall/</url>
      
        <content type="html"><![CDATA[<h2 id="1-查看防火墙状态"><a href="#1-查看防火墙状态" class="headerlink" title="1. 查看防火墙状态"></a>1. 查看防火墙状态</h2><p><code>systemctl status firewalld.service</code></p><p>执行后可以看到绿色字样标注的“active（running）”，说明防火墙是开启状态</p><h2 id="关闭运行的防火墙"><a href="#关闭运行的防火墙" class="headerlink" title="关闭运行的防火墙"></a>关闭运行的防火墙</h2><p><code>systemctl stop firewalld.service</code></p><h2 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h2><p><code>systemctl status firewalld.service</code></p><p>可以看到，disavtive（dead）的字样，说明防火墙已经关闭</p><h2 id="永久关闭防火墙"><a href="#永久关闭防火墙" class="headerlink" title="永久关闭防火墙"></a>永久关闭防火墙</h2><p><code>systemctl disable firewalld.service</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 防火墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot 自定义jar包</title>
      <link href="2021/02/21/springboot/2021-02-21-springboot-thirdjar/"/>
      <url>2021/02/21/springboot/2021-02-21-springboot-thirdjar/</url>
      
        <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>开发springboot项目过程中，有时需要依赖仓库中没有发布的第三方jar包，有以下方案可供选择</p><h2 id="一、方法1"><a href="#一、方法1" class="headerlink" title="一、方法1"></a>一、方法1</h2><p>在pom.xml增加插件配置，指定当前项目所依赖的jar包目录</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>compilerArguments</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extdirs</span><span class="token punctuation">></span></span>$&#123;basedir&#125;/libs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extdirs</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>compilerArguments</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>指定springboot运行时依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>$&#123;basedir&#125;/src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/application*.yml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/application*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>$&#123;basedir&#125;/src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>**/application*.yml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>**/application*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">></span></span>BOOT-INF/lib/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、方法2"><a href="#二、方法2" class="headerlink" title="二、方法2"></a>二、方法2</h2><p>添加dependency依赖,使用systemPath属性，scope属性值为system</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>xxxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>system<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>systemPath</span><span class="token punctuation">></span></span>$&#123;project.basedir&#125;/libs/xxxx-bbbb.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>systemPath</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改打包配置，将自定义jar包包含进去</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includeSystemScope</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includeSystemScope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>build-info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>repackage<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> maven </tag>
            
            <tag> 第三方jar包依赖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot Opencv</title>
      <link href="2021/01/30/springboot/2021-01-28-springboot-opencv/"/>
      <url>2021/01/30/springboot/2021-01-28-springboot-opencv/</url>
      
        <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>本文介绍windows系统下springboot+opencv进行对图片中的人脸进行提取，适合入门学习<br>参考：<a href="https://spring.io/quickstart">springboot</a>,<a href="https://opencv.org/">opencv</a></p><h2 id="一、配置项目"><a href="#一、配置项目" class="headerlink" title="一、配置项目"></a>一、配置项目</h2><h3 id="1-创建Springboot应用"><a href="#1-创建Springboot应用" class="headerlink" title="1. 创建Springboot应用"></a>1. 创建Springboot应用</h3><h3 id="2-下载opencv开发资源包"><a href="#2-下载opencv开发资源包" class="headerlink" title="2. 下载opencv开发资源包"></a>2. 下载opencv开发资源包</h3><p> 下载windows下opencv开发包4.5.1<a href="https://sourceforge.net/projects/opencvlibrary/files/4.5.1/opencv-4.5.1-vc14_vc15.exe/download">点击下载</a>，下载完成后打开exe提取资源到本地</p><h3 id="3-拷贝jar包，修改pom配置"><a href="#3-拷贝jar包，修改pom配置" class="headerlink" title="3. 拷贝jar包，修改pom配置"></a>3. 拷贝jar包，修改pom配置</h3><ul><li><p>在springboot项目resources目录下新建lib包，将上一步提取资源目录下的\build\java\opencv-451.jar复制到lib包下</p></li><li><p>修改pom文件，将该jar包添加到项目依赖中</p><pre class="line-numbers language-maven" data-language="maven"><code class="language-maven">&lt;dependency&gt;     &lt;groupId&gt;org.opencv&lt;&#x2F;groupId&gt;     &lt;artifactId&gt;opencv&lt;&#x2F;artifactId&gt;     &lt;version&gt;4.5.1&lt;&#x2F;version&gt;     &lt;scope&gt;system&lt;&#x2F;scope&gt;     &lt;systemPath&gt;$&#123;project.basedir&#125;&#x2F;src&#x2F;main&#x2F;resources&#x2F;lib&#x2F;opencv-451.jar&lt;&#x2F;systemPath&gt; &lt;&#x2F;dependency&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>添加动态库<br>在项目根目录新建文件夹dll，将opencv资源目录下的\build\java x64,x86复制到dll下</p></li><li><p> 添加opencv分类器<br>在项目根目录新建文件夹haarcascades，将opencv资源目录下\sources\data\haarcascades中的xml文件复制到该目录<br>注： 也可以使用其他分类器,如haarcascades_cuda、lbpcascades下的，效果对比参考<a href="https://blog.csdn.net/xidianzhimeng/article/details/19546069">此处</a></p></li><li><p>最终的项目结构如下：<br><img src="/images/springboot/opencv/structure.png"></p></li><li><p> pom完整文件</p><pre class="line-numbers language-maven" data-language="maven"><code class="language-maven">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot; xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 https:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;    &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;    &lt;parent&gt;        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;        &lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;        &lt;version&gt;2.4.2&lt;&#x2F;version&gt;        &lt;relativePath&#x2F;&gt; &lt;!-- lookup parent from repository --&gt;    &lt;&#x2F;parent&gt;    &lt;groupId&gt;com.demo&lt;&#x2F;groupId&gt;    &lt;artifactId&gt;face&lt;&#x2F;artifactId&gt;    &lt;version&gt;0.0.1-SNAPSHOT&lt;&#x2F;version&gt;    &lt;name&gt;face&lt;&#x2F;name&gt;    &lt;description&gt;Demo project for Spring Boot Face recognize by opencv&lt;&#x2F;description&gt;    &lt;properties&gt;        &lt;maven.compiler.source&gt;8&lt;&#x2F;maven.compiler.source&gt;        &lt;maven.compiler.target&gt;8&lt;&#x2F;maven.compiler.target&gt;    &lt;&#x2F;properties&gt;    &lt;dependencies&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;            &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;        &lt;&#x2F;dependency&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;            &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;            &lt;scope&gt;test&lt;&#x2F;scope&gt;        &lt;&#x2F;dependency&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.opencv&lt;&#x2F;groupId&gt;            &lt;artifactId&gt;opencv&lt;&#x2F;artifactId&gt;            &lt;version&gt;4.5.1&lt;&#x2F;version&gt;            &lt;scope&gt;system&lt;&#x2F;scope&gt;            &lt;systemPath&gt;$&#123;project.basedir&#125;&#x2F;src&#x2F;main&#x2F;resources&#x2F;lib&#x2F;opencv-451.jar&lt;&#x2F;systemPath&gt;        &lt;&#x2F;dependency&gt;    &lt;&#x2F;dependencies&gt;    &lt;build&gt;        &lt;plugins&gt;            &lt;plugin&gt;                &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;                &lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;            &lt;&#x2F;plugin&gt;        &lt;&#x2F;plugins&gt;    &lt;&#x2F;build&gt;&lt;&#x2F;project&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、代码编写"><a href="#二、代码编写" class="headerlink" title="二、代码编写"></a>二、代码编写</h2></li></ul><h3 id="1-人脸处理工具类FaceUtils-java源码"><a href="#1-人脸处理工具类FaceUtils-java源码" class="headerlink" title="1. 人脸处理工具类FaceUtils.java源码"></a>1. 人脸处理工具类FaceUtils.java源码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>face</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>opencv<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>opencv<span class="token punctuation">.</span>imgproc<span class="token punctuation">.</span></span><span class="token class-name">Imgproc</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>opencv<span class="token punctuation">.</span>objdetect<span class="token punctuation">.</span></span><span class="token class-name">CascadeClassifier</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Comparator</span><span class="token punctuation">;</span><span class="token comment">/** * //TODO 描述 * * @author: Ray.ma * @Data: 2021-01-28 11:01 * @Version: 1.0.0 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FaceUtils</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> dir <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user.dir"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token string">"\\"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">"\\dll\\"</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"java.vm.name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"64"</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"x64"</span> <span class="token operator">:</span> <span class="token string">"x86"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\\opencv_java451.dll"</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> dir<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"找不到动态库"</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">"  load success"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 检测人脸数量     *     * @param base64     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">checkFaceNo</span><span class="token punctuation">(</span><span class="token class-name">String</span> base64<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user.dir"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">"/haarcascades/haarcascade_frontalface_alt.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CascadeClassifier</span> faceDetector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CascadeClassifier</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MatOfRect</span> faceDetections <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MatOfRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        faceDetector<span class="token punctuation">.</span><span class="token function">detectMultiScale</span><span class="token punctuation">(</span><span class="token class-name">StreamUtils</span><span class="token punctuation">.</span><span class="token function">base642Mat</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token punctuation">,</span> faceDetections<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> faceDetections<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">extractMaxFace</span><span class="token punctuation">(</span><span class="token class-name">String</span> base64<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user.dir"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">"/haarcascades/haarcascade_frontalface_alt.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CascadeClassifier</span> faceDetector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CascadeClassifier</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MatOfRect</span> faceDetections <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MatOfRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Mat</span> mat <span class="token operator">=</span> <span class="token class-name">StreamUtils</span><span class="token punctuation">.</span><span class="token function">base642Mat</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token punctuation">;</span>        faceDetector<span class="token punctuation">.</span><span class="token function">detectMultiScale</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> faceDetections<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>faceDetections<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Rect</span> rect <span class="token operator">=</span> faceDetections<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parallelStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span>o <span class="token operator">-></span> o<span class="token punctuation">.</span>height <span class="token operator">*</span> o<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Mat</span> face <span class="token operator">=</span> <span class="token function">imageCut</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>x<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token class-name">StreamUtils</span><span class="token punctuation">.</span><span class="token function">catToBase64</span><span class="token punctuation">(</span>face<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * @param image  原始图像     * @param posX   x坐标     * @param posY   y坐标     * @param width  宽度     * @param height 高度     * @return     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Mat</span> <span class="token function">imageCut</span><span class="token punctuation">(</span><span class="token class-name">Mat</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> posX<span class="token punctuation">,</span> <span class="token keyword">int</span> posY<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 截取的区域：参数,坐标X,坐标Y,截图宽度,截图长度</span>        <span class="token class-name">Rect</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span>posX<span class="token punctuation">,</span> posY<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 两句效果一样</span>        <span class="token class-name">Mat</span> sub <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">submat</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Mat sub = new Mat(image,rect);</span>        <span class="token class-name">Mat</span> mat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Mat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Size</span> size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Size</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Imgproc</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>sub<span class="token punctuation">,</span> mat<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 将人脸进行截图并保存</span>        <span class="token keyword">return</span> mat<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">markFace</span><span class="token punctuation">(</span><span class="token class-name">String</span> base64Images<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user.dir"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">"/haarcascades/haarcascade_frontalface_alt.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CascadeClassifier</span> faceDetector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CascadeClassifier</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MatOfRect</span> faceDetections <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MatOfRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Mat</span> mat <span class="token operator">=</span> <span class="token class-name">StreamUtils</span><span class="token punctuation">.</span><span class="token function">base642Mat</span><span class="token punctuation">(</span>base64Images<span class="token punctuation">)</span><span class="token punctuation">;</span>        faceDetector<span class="token punctuation">.</span><span class="token function">detectMultiScale</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> faceDetections<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>faceDetections<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Rect</span> rect <span class="token operator">:</span> faceDetections<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Imgproc</span><span class="token punctuation">.</span><span class="token function">rectangle</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x <span class="token operator">+</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y <span class="token operator">+</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token class-name">StreamUtils</span><span class="token punctuation">.</span><span class="token function">catToBase64</span><span class="token punctuation">(</span>mat<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用到的StreamUtils.java源码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>face</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>opencv<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">CvType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>opencv<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">Mat</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>opencv<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">MatOfByte</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>opencv<span class="token punctuation">.</span>imgcodecs<span class="token punctuation">.</span></span><span class="token class-name">Imgcodecs</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64Utils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span><span class="token class-name">BASE64Decoder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span></span><span class="token class-name">ImageIO</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">BufferedImage</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">DataBufferByte</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token comment">/** * //TODO 描述 * * @author: Ray.ma * @Data: 2021-01-28 11:26 * @Version: 1.0.0 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamUtils</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 装换回编码     *     * @param correctMat     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">catToBase64</span><span class="token punctuation">(</span><span class="token class-name">Mat</span> correctMat<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">bufferToBase64</span><span class="token punctuation">(</span><span class="token function">toByteArray</span><span class="token punctuation">(</span>correctMat<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 转换成base64编码     *     * @param buffer     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">bufferToBase64</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">Base64Utils</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * base64编码转换成字节数组     *     * @param base64Str     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">base64ToByteArray</span><span class="token punctuation">(</span><span class="token class-name">String</span> base64Str<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">Base64Utils</span><span class="token punctuation">.</span><span class="token function">decodeFromString</span><span class="token punctuation">(</span>base64Str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * base64 编码转换为 BufferedImage     *     * @param base64     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">BufferedImage</span> <span class="token function">base64ToBufferedImage</span><span class="token punctuation">(</span><span class="token class-name">String</span> base64<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">BASE64Decoder</span> <span class="token class-name">Base64</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BASE64Decoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes1 <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">decodeBuffer</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">ByteArrayInputStream</span> bais <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>bytes1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bais<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * mat转换成bufferedImage     *     * @param matrix     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token class-name">Mat</span> matrix<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">MatOfByte</span> mob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MatOfByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Imgcodecs</span><span class="token punctuation">.</span><span class="token function">imencode</span><span class="token punctuation">(</span><span class="token string">".jpg"</span><span class="token punctuation">,</span> matrix<span class="token punctuation">,</span> mob<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> mob<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * mat转换成bufferedImage     *     * @param matrix     * @return     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">BufferedImage</span> <span class="token function">toBufferedImage</span><span class="token punctuation">(</span><span class="token class-name">Mat</span> matrix<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token function">toByteArray</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ByteArrayInputStream</span> bais <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bais<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * base64转Mat     *     * @param base64     * @return     * @throws IOException     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Mat</span> <span class="token function">base642Mat</span><span class="token punctuation">(</span><span class="token class-name">String</span> base64<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">bufImg2Mat</span><span class="token punctuation">(</span><span class="token function">base64ToBufferedImage</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">.</span>TYPE_3BYTE_BGR<span class="token punctuation">,</span> <span class="token class-name">CvType</span><span class="token punctuation">.</span>CV_8UC3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * BufferedImage转换成Mat     *     * @param original 要转换的BufferedImage     * @param imgType  bufferedImage的类型 如 BufferedImage.TYPE_3BYTE_BGR     * @param matType  转换成mat的type 如 CvType.CV_8UC3     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Mat</span> <span class="token function">bufImg2Mat</span><span class="token punctuation">(</span><span class="token class-name">BufferedImage</span> original<span class="token punctuation">,</span> <span class="token keyword">int</span> imgType<span class="token punctuation">,</span> <span class="token keyword">int</span> matType<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>original <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"original == null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Don't convert if it already has correct type</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>original<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> imgType<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// Create a buffered image</span>            <span class="token class-name">BufferedImage</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">(</span>original<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> original<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> imgType<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// Draw the image onto the new buffer</span>            <span class="token class-name">Graphics2D</span> g <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">createGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                g<span class="token punctuation">.</span><span class="token function">setComposite</span><span class="token punctuation">(</span><span class="token class-name">AlphaComposite</span><span class="token punctuation">.</span><span class="token class-name">Src</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>original<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                original <span class="token operator">=</span> image<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>                g<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pixels <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">DataBufferByte</span><span class="token punctuation">)</span> original<span class="token punctuation">.</span><span class="token function">getRaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDataBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Mat</span> mat <span class="token operator">=</span> <span class="token class-name">Mat</span><span class="token punctuation">.</span><span class="token function">eye</span><span class="token punctuation">(</span>original<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> original<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> matType<span class="token punctuation">)</span><span class="token punctuation">;</span>        mat<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pixels<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> mat<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-测试controller源码"><a href="#2-测试controller源码" class="headerlink" title="2. 测试controller源码"></a>2. 测试controller源码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>face</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">PrintWriter</span><span class="token punctuation">;</span><span class="token comment">/** * //TODO 描述 * * @author: Ray.ma * @Data: 2021-01-28 11:30 * @Version: 1.0.0 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FaceController</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 获取图片中人脸个数     *     * @param base64Images base64图片，不包含逗号之前的部分     * @return     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"checkFaceNumber"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">checkFaceNumber</span><span class="token punctuation">(</span><span class="token class-name">String</span> base64Images<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">FaceUtils</span><span class="token punctuation">.</span><span class="token function">checkFaceNo</span><span class="token punctuation">(</span>base64Images<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 提取最大脸     *     * @param response     * @param base64Images     * @throws IOException     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"extractMaxFace"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">extractMaxFace</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> base64Images<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> indexOf <span class="token operator">=</span> base64Images<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>indexOf <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            base64Images <span class="token operator">=</span> base64Images<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>indexOf <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/octet-stream"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PrintWriter</span> writer <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        base64Images <span class="token operator">=</span> <span class="token class-name">FaceUtils</span><span class="token punctuation">.</span><span class="token function">extractMaxFace</span><span class="token punctuation">(</span>base64Images<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>base64Images<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"没有人脸"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"data:image/png;base64,"</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>base64Images<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 标记脸     *     * @param response     * @param base64Images     * @throws IOException     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"markFace"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">markFace</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> base64Images<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> indexOf <span class="token operator">=</span> base64Images<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>indexOf <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            base64Images <span class="token operator">=</span> base64Images<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>indexOf <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/octet-stream"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PrintWriter</span> writer <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        base64Images <span class="token operator">=</span> <span class="token class-name">FaceUtils</span><span class="token punctuation">.</span><span class="token function">markFace</span><span class="token punctuation">(</span>base64Images<span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"data:image/png;base64,"</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>base64Images<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、最终效果"><a href="#三、最终效果" class="headerlink" title="三、最终效果"></a>三、最终效果</h2><p>标记脸的效果如下：  </p><p><img src="/images/springboot/opencv/multi-face.png"></p><h2 id="四、其他"><a href="#四、其他" class="headerlink" title="四、其他"></a>四、其他</h2><p>绘制文字，绘制线</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Mat</span> mat <span class="token operator">=</span> <span class="token class-name">Imgcodecs</span><span class="token punctuation">.</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"d:\\face\\1.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user.dir"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">"/haarcascades/haarcascade_frontalface_alt.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CascadeClassifier</span> faceDetector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CascadeClassifier</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MatOfRect</span> faceDetections <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MatOfRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        faceDetector<span class="token punctuation">.</span><span class="token function">detectMultiScale</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> faceDetections<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>faceDetections<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Rect</span> rect <span class="token operator">:</span> faceDetections<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//绘制长方形</span><span class="token comment">//                Imgproc.rectangle(mat, new Point(rect.x, rect.y), new Point(rect.x + rect.width, rect.y + rect.height), new Scalar(0, 255, 0), 3);</span>                <span class="token comment">//绘制文字</span><span class="token comment">//                Imgproc.putText(mat,"Face", new Point(rect.x, rect.y), 0,0.5,new Scalar(0, 255, 0),3);</span>                <span class="token comment">//绘制线</span>                <span class="token class-name">Imgproc</span><span class="token punctuation">.</span><span class="token function">line</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Imgproc</span><span class="token punctuation">.</span><span class="token function">line</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Imgproc</span><span class="token punctuation">.</span><span class="token function">line</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x <span class="token operator">+</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x <span class="token operator">+</span> rect<span class="token punctuation">.</span>width <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Imgproc</span><span class="token punctuation">.</span><span class="token function">line</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x <span class="token operator">+</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x <span class="token operator">+</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Imgproc</span><span class="token punctuation">.</span><span class="token function">line</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y <span class="token operator">+</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y <span class="token operator">+</span> rect<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Imgproc</span><span class="token punctuation">.</span><span class="token function">line</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y <span class="token operator">+</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y <span class="token operator">+</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Imgproc</span><span class="token punctuation">.</span><span class="token function">line</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x <span class="token operator">+</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y <span class="token operator">+</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x <span class="token operator">+</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y <span class="token operator">+</span> rect<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Imgproc</span><span class="token punctuation">.</span><span class="token function">line</span><span class="token punctuation">(</span>mat<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x <span class="token operator">+</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y <span class="token operator">+</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x <span class="token operator">+</span> rect<span class="token punctuation">.</span>width <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y <span class="token operator">+</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Imgcodecs</span><span class="token punctuation">.</span><span class="token function">imwrite</span><span class="token punctuation">(</span><span class="token string">"D:\\face\\1-new.jpg"</span><span class="token punctuation">,</span> mat<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下载源码 链接:<a href="https://pan.baidu.com/s/14Lfc_5dnuRdYup_67ub9uA">https://pan.baidu.com/s/14Lfc_5dnuRdYup_67ub9uA</a> 提取码: rj5r </p>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> opencv </tag>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页面访问统计</title>
      <link href="2021/01/05/html/2021-01-05-html-pv/"/>
      <url>2021/01/05/html/2021-01-05-html-pv/</url>
      
        <content type="html"><![CDATA[<p>#目录</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在网站开发中，很多网页需要用到访问数量统计，访问人数统计。常用的有<a href="https://tongji.baidu.com/web/welcome/login">百度网站</a>统计,<br><a href="https://www.cnzz.com/o_index.php">CNZZ</a>(已合并到友孟)。这些平台都已经很稳定、成熟，按照其文档操作，即可获取网站详细的统计数据。<br>这里要与大家分享的是一个快速统计插件<a href="http://busuanzi.ibruce.info/">不蒜子</a>，好处就是不需要注册账号等复杂操作，坏处就是统计的内容较少</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="引入JS"><a href="#引入JS" class="headerlink" title="引入JS"></a>引入JS</h3><pre class="line-numbers language-none"><code class="language-none">&lt;script async src&#x3D;&quot;&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装标签"><a href="#安装标签" class="headerlink" title="安装标签"></a>安装标签</h3><ol><li>显示站点访问量<br>复制一下代码添加到你需要显示的位置，有两种算法可选：<br>a. pv的方式，单个用户连续点击n篇文章，记录n次访问量，即每次点击都记录一次  <pre class="line-numbers language-none"><code class="language-none">&lt;span id&#x3D;&quot;busuanzi_container_site_pv&quot;&gt;    本站总访问量&lt;span id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;&lt;&#x2F;span&gt;次&lt;&#x2F;span&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>b. uv的方式，单个用户连续点击n篇文章，只记录1次访客数  <pre class="line-numbers language-none"><code class="language-none">&lt;span id&#x3D;&quot;busuanzi_container_site_uv&quot;&gt;  本站访客数&lt;span id&#x3D;&quot;busuanzi_value_site_uv&quot;&gt;&lt;&#x2F;span&gt;人次&lt;&#x2F;span&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>显示单页面访问量</li></ol><p>要显示每篇文章的访问量，复制以下代码添加到你需要显示的位置。</p><pre class="line-numbers language-none"><code class="language-none">&lt;span id&#x3D;&quot;busuanzi_container_page_pv&quot;&gt;  本文总阅读量&lt;span id&#x3D;&quot;busuanzi_value_page_pv&quot;&gt;&lt;&#x2F;span&gt;次&lt;&#x2F;span&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="3"><li>显示站点总访问量和单页面访问量</li></ol><p>上面两种标签代码都安装。</p><ol start="4"><li>只计数不显示</li></ol><p>只安装脚本代码，不安装标签代码。</p><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>极简模式</p><pre class="line-numbers language-none"><code class="language-none">本站总访问量&lt;span id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;&lt;&#x2F;span&gt;次本站访客数&lt;span id&#x3D;&quot;busuanzi_value_site_uv&quot;&gt;&lt;&#x2F;span&gt;人次本文总阅读量&lt;span id&#x3D;&quot;busuanzi_value_page_pv&quot;&gt;&lt;&#x2F;span&gt;次<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者个性化一下：</p><pre class="line-numbers language-none"><code class="language-none">Total &lt;span id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;&lt;&#x2F;span&gt; views.您是xxx的第&lt;span id&#x3D;&quot;busuanzi_value_site_uv&quot;&gt;&lt;&#x2F;span&gt;个小伙伴&lt;span id&#x3D;&quot;busuanzi_value_page_pv&quot;&gt;&lt;&#x2F;span&gt; Hits<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>文章参考<a href="http://ibruce.info/2015/04/04/busuanzi/#more">不蒜子统计</a></p>]]></content>
      
      
      <categories>
          
          <category> Html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Html </tag>
            
            <tag> 教程 </tag>
            
            <tag> 页面访问统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Html</title>
      <link href="2021/01/05/html/2021-01-05-html/"/>
      <url>2021/01/05/html/2021-01-05-html/</url>
      
        <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><h3 id="解压缩tar命令"><a href="#解压缩tar命令" class="headerlink" title="解压缩tar命令"></a><a href="/2020/12/30/linux/2020-12-30-linux-tar/">解压缩tar命令</a></h3>]]></content>
      
      
      <categories>
          
          <category> Html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Html </tag>
            
            <tag> 教程 </tag>
            
            <tag> 网页 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础命令-tar</title>
      <link href="2020/12/30/linux/2020-12-30-linux-tar/"/>
      <url>2020/12/30/linux/2020-12-30-linux-tar/</url>
      
        <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>以下为五个独立的命令，解压缩时只能使用其中一个</p><blockquote><p>-c: 建立压缩档案<br>-x：解压<br>-t：查看内容<br>-r：象牙所闻搭建末尾追加文件<br>-u：更新原压缩包中的文件</p></blockquote><p>以下参数根据需要在解压缩时可选</p><blockquote><p>-z：有gzip属性的<br>-j：有bz2属性的<br>-Z：有compress属性的<br>-v：显示所有进程<br>-O：将文件解开到标准输出</p></blockquote><p>下面的参数-f是必须的</p><blockquote><p>-f:使用档案名字，切记，这个参数是u子厚一个参数，后面只能接档案名</p></blockquote><pre class="line-numbers language-none"><code class="language-none"># tar -cf all.tar *.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条命令是将多有.jpg的文件打包成一个名为all.tar的包，-c是表示产生新的包，-f指定包的文件名</p><pre class="line-numbers language-none"><code class="language-none">#tar -rf all.tar *.gif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条命令是将所有的.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思</p><pre class="line-numbers language-none"><code class="language-none">#tar -uf all.tar logo.gif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条命令是更新原来tar包all.tar中的logo.gif文件，-u表示更新文件</p><pre class="line-numbers language-none"><code class="language-none">#tar -tf all.tar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条命令是列出all.tar包中所有文件，-t是列出文件的的意思</p><pre class="line-numbers language-none"><code class="language-none">#tar -xf all.tar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条命令是解出all.tar中又有文件，-t是解开的意思</p><h2 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h2><p><code>tar -cvf jpg.tar *.jpg</code> //将目录所有的jpg文件打包成jpg.tar<br><code>tar -czf jpg.tar.gz *.jpg</code> //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz<br><code>tar -cjf jpg.tar.bz2 *.jpg</code> //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2<br><code>tar -cZf jpg.bar.Z *.jpg</code> //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z<br><code>rar a jpg.rar *.jpg</code> //rar格式的压缩，需要先下载rar for linux<br><code>zip jpg.zip *.jpg</code> //zip格式的压缩，需要先下载zip for linux</p><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p><code>tar -xvf file.tar</code> //解压 tar包<br><code>tar -xzvf file.tar.gz</code> //解压tar.gz<br><code>tar -xjvf file.tar.bz2</code>   //解压 tar.bz2<br><code>tar -xZvf file.tar.Z</code>   //解压tar.Z<br><code>unrar e file.rar</code> //解压rar<br><code>unzip file.zip</code> //解压zip</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos输入法</title>
      <link href="2020/12/30/linux/2020-12-31-linux-centos/"/>
      <url>2020/12/30/linux/2020-12-31-linux-centos/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装拼音包"><a href="#1-安装拼音包" class="headerlink" title="1. 安装拼音包"></a>1. 安装拼音包</h2><p><code>yum intall ibus-libpinyin</code></p><h2 id="2-打开应用程序-gt-系统工具-gt-设置-gt-区域和语言，点击输入源下面的-号"><a href="#2-打开应用程序-gt-系统工具-gt-设置-gt-区域和语言，点击输入源下面的-号" class="headerlink" title="2. 打开应用程序-&gt;系统工具-&gt;设置-&gt;区域和语言，点击输入源下面的+号"></a>2. 打开应用程序-&gt;系统工具-&gt;设置-&gt;区域和语言，点击输入源下面的+号</h2><p><img src="/images/linux/centos-pinyin-01.png"><br><img src="/images/linux/centos-pinyin-02.png"></p><h2 id="3-选择汉语-中国"><a href="#3-选择汉语-中国" class="headerlink" title="3. 选择汉语(中国)"></a>3. 选择汉语(中国)</h2><p><img src="/images/linux/centos-pinyin-03.png"> </p><h2 id="4-选择汉语，点击添加按钮"><a href="#4-选择汉语，点击添加按钮" class="headerlink" title="4. 选择汉语，点击添加按钮"></a>4. 选择汉语，点击添加按钮</h2><p><img src="/images/linux/centos-pinyin-04.png"></p><h2 id="5-点击工具栏右上角语言，进行输入法切换。按shift键进行中-英文切换"><a href="#5-点击工具栏右上角语言，进行输入法切换。按shift键进行中-英文切换" class="headerlink" title="5. 点击工具栏右上角语言，进行输入法切换。按shift键进行中/英文切换"></a>5. 点击工具栏右上角语言，进行输入法切换。按shift键进行中/英文切换</h2><p><img src="/images/linux/centos-pinyin-05.png"><br><img src="/images/linux/centos-pinyin-06.png"> </p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 命令 </tag>
            
            <tag> 输入法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="2020/12/30/linux/2020-12-30-linux/"/>
      <url>2020/12/30/linux/2020-12-30-linux/</url>
      
        <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><h3 id="解压缩tar命令"><a href="#解压缩tar命令" class="headerlink" title="解压缩tar命令"></a><a href="/2020/12/30/linux/2020-12-30-linux-tar/">解压缩tar命令</a></h3>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown教程</title>
      <link href="2020/12/29/2020-12-29-markdown/"/>
      <url>2020/12/29/2020-12-29-markdown/</url>
      
        <content type="html"><![CDATA[<p>这是一个自我练习的例子，更多内容请参考<a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown语法</a></p><h2 id="Markdown教程"><a href="#Markdown教程" class="headerlink" title="Markdown教程"></a>Markdown教程</h2><h3 id="一-Markdown标题"><a href="#一-Markdown标题" class="headerlink" title="一. Markdown标题"></a>一. Markdown标题</h3><p>Markdown标题有两种格式</p><h4 id="1-使用-和-标记以及和二级标题"><a href="#1-使用-和-标记以及和二级标题" class="headerlink" title="1. 使用=和-标记以及和二级标题"></a>1. 使用=和-标记以及和二级标题</h4><pre class="line-numbers language-none"><code class="language-none">我是展示的以及标题&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;我是展示的二级标题---------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-使用-号"><a href="#2-使用-号" class="headerlink" title="2. 使用#号"></a>2. 使用#号</h4><p>使用#号可以表示1-6级标题，一个级别对应一个#号</p><pre class="line-numbers language-none"><code class="language-none"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二-Markdown段落"><a href="#二-Markdown段落" class="headerlink" title="二. Markdown段落"></a>二. Markdown段落</h3><h4 id="1-段落"><a href="#1-段落" class="headerlink" title="1. 段落"></a>1. 段落</h4><p>Markdown段落没有特殊的格式，直接编写就好，段落的换行时使用两个以上空格加上回车。当然也可以在段落后面使用一个空行来表示重更新开始一个段落。<br>eg：  </p><p>我是第一段（我下面是有一个空行哦）</p><p>我是第二段(有两个空格在我后面哦)<br>我是第三段</p><h4 id="2-字体"><a href="#2-字体" class="headerlink" title="2. 字体"></a>2. 字体</h4><p>Markdown可以使用以下几种字体</p><pre class="line-numbers language-none"><code class="language-none">*斜体文本*  _斜体文本_**粗体文本**__粗体文本__***粗体文本***___粗体文本___<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>效果如下：<br><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>斜粗体文本</em></strong><br><strong><em>斜粗体文本</em></strong></p></blockquote><h4 id="3-分割线"><a href="#3-分割线" class="headerlink" title="3. 分割线"></a>3. 分割线</h4><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分割线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线。</p><pre class="line-numbers language-none"><code class="language-none">**** * ******- - ---------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><blockquote><hr><hr><hr><hr><hr></blockquote><h3 id="三-Markdown列表"><a href="#三-Markdown列表" class="headerlink" title="三. Markdown列表"></a>三. Markdown列表</h3><p>Markdown支持有序列表和无序列表。 </p><h4 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1. 无序列表"></a>1. 无序列表</h4><p>无序列表使用星号（*）、加号（+）或是减号（-）作为列表标记，这些标记后面要添加一个空格，然后再填写内容：  </p><pre class="line-numbers language-none"><code class="language-none">*第一项*第二项*第三项+第一项+第二项+第三项-第一项-第二项-第三项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>效果如下：  </p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><h4 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2. 有序列表"></a>2. 有序列表</h4><p>有序列表使用数字加上.号来表示，如：  </p><pre class="line-numbers language-none"><code class="language-none">1. 第一项2. 第一项3. 第一项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>效果如下:  </p><ol><li>第一项</li><li>第一项</li><li>第一项</li></ol></blockquote><h4 id="3-列表嵌套"><a href="#3-列表嵌套" class="headerlink" title="3. 列表嵌套"></a>3. 列表嵌套</h4><p>列表嵌套只需再子列表中的选项前面添加四个空格即可</p><pre class="line-numbers language-none"><code class="language-none">1. 第一项：    - 第一个元素    - 第二个元素2. 第二项：    - 第一个元素    - 第二个元素<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：  </p><blockquote><ol><li>第一项：<ul><li>第一个元素</li><li>第二个元素</li></ul></li><li>第二项：<ul><li>第一个元素</li><li>第二个元素</li></ul></li></ol></blockquote><h3 id="四-Markdown区块"><a href="#四-Markdown区块" class="headerlink" title="四. Markdown区块"></a>四. Markdown区块</h3><p>Markdown区块引用实在段落开头使用&gt;符号，然后后面紧跟一个空格符号：</p><pre class="line-numbers language-none"><code class="language-none">&gt; 区块引用&gt; 菜鸟教程&gt; 学的不仅是技术更是梦想<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><blockquote><p>区块引用<br>菜鸟教程<br>学的不仅是技术更是梦想</p></blockquote><p>另外区块是可以嵌套的，一个&gt;符号是最外层，两个&gt;符号是第一层嵌套，以此类推：</p><pre class="line-numbers language-none"><code class="language-none">&gt; 最外层&gt; &gt; 第一层&gt; &gt; &gt; 第二层<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><blockquote><p>最外层</p><blockquote><p>第一层</p><blockquote><p>第二层</p></blockquote></blockquote></blockquote><h3 id="五-Markdown代码"><a href="#五-Markdown代码" class="headerlink" title="五. Markdown代码"></a>五. Markdown代码</h3><p>如果是段落上的一个函数或片段可以用反引号把他包起来(`)，例如：</p><pre class="line-numbers language-none"><code class="language-none">&#96;printf()&#96;函数<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>效果如下：<br><code>printf()</code>函数</p><p><strong>代码区块</strong><br>代码区块使用4个空格或者一个制表符（Tab键）。</p><p>效果如下：<br>   &lt;?php<br>     echo ‘Test’<br>     function test(){<br>       echo ‘test’<br>     }<br>     &gt;<br>你也可以用```包裹一段代码，并指定一种语言（也可以不指定）：</p><pre class="line-numbers language-none"><code class="language-none">&#96;&#96;&#96;javascript   $(document).ready(function()&#123;    alert(&#39;Test&#39;);   &#125;);&#96;&#96;&#96;  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Test'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="六-Markdown链接"><a href="#六-Markdown链接" class="headerlink" title="六. Markdown链接"></a>六. Markdown链接</h3><ol><li><p>普通链接<br>链接使用方法如下：</p><pre class="line-numbers language-none"><code class="language-none">[链接名称](链接地址)或者&lt;链接地址&gt;&lt;链接地址&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>例如：</p><pre class="line-numbers language-none"><code class="language-none">这是一个链接[markdown教程](https:&#x2F;&#x2F;zziamalei.gitee.io)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>效果如下：  </p><blockquote><p>这是一个链接<a href="https://zziamalei.gitee.io/">markdown教程</a></p></blockquote></li></ol><p>直接使用链接地址：</p><pre class="line-numbers language-none"><code class="language-none">&lt;https:&#x2F;&#x2F;zziamalei.gitee.io&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>效果如下：  </p><blockquote><p><a href="https://zziamalei.gitee.io/">https://zziamalei.gitee.io</a></p></blockquote><ol start="2"><li>高级链接<br>我们可以通过变量来设置一个链接，变量复制在文档末尾进行：  <pre class="line-numbers language-none"><code class="language-none">这个链接用1作为网址变量[Baidu][1]这个链接用test作为网址变量[Test][test][1]: http:&#x2F;&#x2F;www.baidu.com[test]: https:&#x2F;&#x2F;zziamalei.gitee.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>效果如下：<br>这个链接用1作为网址变量<a href="http://www.baidu.com/">Baidu</a><br>这个链接用test作为网址变量<a href="https://zziamalei.gitee.io/">Test</a></li></ol><h3 id="七-Markdown图片"><a href="#七-Markdown图片" class="headerlink" title="七. Markdown图片"></a>七. Markdown图片</h3><p> Markdown图片语法格式如下：  </p><blockquote><pre class="line-numbers language-none"><code class="language-none">![alt属性文本](图片地址)![alt属性文本](图片地址 &quot;可选标题&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><ul><li><p>开头一个感叹号!</p></li><li><p>接着一个方括号，里面放上图片的替代文字</p></li><li><p>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的’title’属性的文字</p><p>使用实例：  </p><blockquote><pre class="line-numbers language-none"><code class="language-none">![](&#x2F;medias&#x2F;logo.png)![Image1](&#x2F;medias&#x2F;logo.png)![Image2](&#x2F;medias&#x2F;logo.png &quot;我是一个Logo&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><p>效果如下：  </p><blockquote><p> <img src="/medias/logo.png"><br> <img src="/medias/logo.png" alt="Image1"><br> <img src="/medias/logo.png" alt="Image2" title="我是一个Logo"></p></blockquote></li></ul><h3 id="八-Markdown表格"><a href="#八-Markdown表格" class="headerlink" title="八. Markdown表格"></a>八. Markdown表格</h3><p> Markdown制作表格使用|来分隔不同的单元格，使用-来分隔表头和其他行。<br> 语法格式如下：  </p><pre class="line-numbers language-none"><code class="language-none">|  表头  |  表头 ||  ---- | ---- || 单元格 |  单元格 || 单元格 |  单元格 |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p> 效果如下：  </p><blockquote><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table></blockquote><p>对齐方式<br><em>我们可以设置表格的对齐方式：</em>  </p><ul><li>-:设置内容和标题栏居右对其。</li><li>:-设置内容和标题栏居左对其。</li><li>:-:设置内容和标题栏居中对其。</li></ul><p>实例如下： </p><pre class="line-numbers language-none"><code class="language-none">| 左对齐 | 右对齐 | 居中对齐 || :-| -: | :-: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下： </p><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">1</td><td align="right">2</td><td align="center">3</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h3 id="九-Markdown高级技巧"><a href="#九-Markdown高级技巧" class="headerlink" title="九. Markdown高级技巧"></a>九. Markdown高级技巧</h3><p><strong>支持的HTML元素</strong></p><h3 id="十-Markdown-流程图时序图"><a href="#十-Markdown-流程图时序图" class="headerlink" title="十. Markdown 流程图时序图"></a>十. Markdown 流程图时序图</h3><p>不在markdown涵盖范围之内的标签，都可以直接在文档里面用HTML撰写。<br>目前支持的html元素有：<code>&lt;kbd&gt;&lt;b&gt;&lt;i&gt;&lt;em&gt;&lt;sup&gt;&lt;br&gt;</code>等，如： </p><pre class="line-numbers language-none"><code class="language-none">使用&lt;kbd&gt;Ctrl&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Alt&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Del&lt;&#x2F;kbd&gt;重启电脑<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>效果如下：<br>使用<kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd>重启电脑</p><p><strong>转义</strong><br>Markdown使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown使用反斜杠转义特殊字符：  </p><blockquote><p><code>**文本加粗**</code><br><code>\*\*正常显示星号\*\*</code></p></blockquote><p>效果如下：<br><strong>文本加粗</strong><br>**正常显示星号**</p><p>Markdown支持以下这些符号前面加上反斜杠来帮助插入普通的符号：  </p><blockquote><p>\  反斜杠<br>、 反引号<br>*  星号<br>_  下划线<br>{} 花括号<br>[] 方括号<br>() 小括号<br># #号<br>+ 加号<br>- 减号<br>. 英文句点<br>! 感叹号</p></blockquote><p><strong>公示</strong><br>当你需要在编辑器中插入数学公式式，可以使用两个美元$$包裹TeX或LaTeX格式的数学公示来实现。提交后，问答和文章页会根据需要加载Mathjax对数学公式进行渲染。如：  </p><pre class="line-numbers language-none"><code class="language-none">$$ \mathbf&#123;V&#125;_1 \times \mathbf&#123;V&#125;_2 &#x3D;  \begin&#123;vmatrix&#125;  \mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\ \frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\ \frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\ \end&#123;vmatrix&#125;$&#123;$tep1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果为：  </p><p>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>${$tep1}{\style{visibility:hidden}{(x+1)(x+1)}}<br>$$</p><h4 id="1-横向流程图源码格式"><a href="#1-横向流程图源码格式" class="headerlink" title="1. 横向流程图源码格式"></a>1. 横向流程图源码格式</h4><blockquote><p>```mermaid<br>      graph LR<br>      A[方形] –&gt;B(圆角)<br>         B –&gt; C{条件a}<br>         C –&gt;|a=1| D[结果1]<br>         C –&gt;|a=2| E[结果2]<br>         F[横向流程图]<br>```</p></blockquote><p>效果如下：</p><pre class="mermaid">   graph LR   A[方形] -->B(圆角)       B --> C{条件a}       C -->|a=1| D[结果1]       C -->|a=2| E[结果2]       F[横向流程图]</pre><h4 id="2-竖向流程图源码格式"><a href="#2-竖向流程图源码格式" class="headerlink" title="2. 竖向流程图源码格式"></a>2. 竖向流程图源码格式</h4><blockquote><p>```mermaid<br>graph TD<br>A[方形] –&gt; B(圆角)<br>  B –&gt; C{条件a}<br>  C –&gt; |a=1| D[结果1]<br>  C –&gt; |a=2| E[结果2]<br>```</p></blockquote><p>效果如下：  </p><pre class="mermaid">graph TDA[方形] --> B(圆角)B --> C{条件a}C --> |a=1| D[结果1]C --> |a=2| E[结果2]</pre><h4 id="3-标准流程图源码格式"><a href="#3-标准流程图源码格式" class="headerlink" title="3. 标准流程图源码格式"></a>3. 标准流程图源码格式</h4><blockquote><p>```flow<br>st=&gt;start: 开始节点<br>in=&gt;inputoutput: 输入<br>e=&gt;end: 结束节点<br>op=&gt;operation: 操作节点<br>cond=&gt;condition: 条件节点<br>sub=&gt;subroutine: 子例程<br>out=&gt;inputoutput: 输出<br>st(right)-&gt;in-&gt;op-&gt;cond<br>cond(yes,right)-&gt;out-&gt;e<br>cond(no)-&gt;sub<br>```</p></blockquote><p>效果如下：</p><div id="flowchart-0" class="flow-chart"></div><h4 id="4-标准流程图源码格式（横向）"><a href="#4-标准流程图源码格式（横向）" class="headerlink" title="4. 标准流程图源码格式（横向）"></a>4. 标准流程图源码格式（横向）</h4><div id="flowchart-1" class="flow-chart"></div><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 开始节点in=>inputoutput: 输入e=>end: 结束节点op=>operation: 操作节点cond=>condition: 条件节点sub=>subroutine: 子例程out=>inputoutput: 输出st(right)->in->op->condcond(yes,right)->out->econd(no)->sub</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><textarea id="flowchart-1-code" style="display: none">st=>start: 开始框op=>operation: 处理框cond=>condition: 判断框(是或否?)sub1=>subroutine: 子流程io=>inputoutput: 输入输出框e=>end: 结束框st(right)->op(right)->condcond(yes)->io(bottom)->econd(no)->sub1(right)->op</textarea><textarea id="flowchart-1-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-1-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-1-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-1", options);</script>]]></content>
      
      
      <categories>
          
          <category> 标记语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
